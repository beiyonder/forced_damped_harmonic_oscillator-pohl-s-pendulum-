(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    249576,       4616]
NotebookOptionsPosition[    246794,       4560]
NotebookOutlinePosition[    247234,       4577]
CellTagsIndexPosition[    247191,       4574]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Experiment 5: Forced damped harmonic oscillator (Pohl\[CloseCurlyQuote]s \
Pendulum)

Siddharth Ahire(EP20B006) | Shantanu Joshi(EP20B020)\
\>", "Subsection",
 CellChangeTimes->{{3.8453797484091854`*^9, 
  3.845379820612091*^9}},ExpressionUUID->"917faf4e-5985-4297-b1d0-\
134298941bb3"],

Cell[BoxData[
 RowBox[{"--", 
  RowBox[{"--", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.84536884632139*^9, 
  3.845368850531279*^9}},ExpressionUUID->"3c837780-bde0-48c1-a470-\
bc577a87694f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Numerical", " ", "Solution"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Solution", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "x", "]"}], " ", "+", " ", 
         RowBox[{"5", "*", 
          RowBox[{"y", "[", "x", "]"}]}], " ", "+", " ", 
         RowBox[{"0.5", "*", 
          RowBox[{
           RowBox[{"y", "'"}], "[", "x", "]"}]}]}], " ", "==", " ", "0"}], 
       ",", " ", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], " ", "==", " ", "0.25"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], " ", "==", " ", "0"}]}], "}"}], 
     ",", " ", "y", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", " ", ",", " ", "10"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8453001601803226`*^9, 3.84530018088445*^9}, {
  3.8453004187387123`*^9, 3.8453004285125685`*^9}, {3.845370125616477*^9, 
  3.8453701768644447`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"f3d73c86-8e38-416b-914d-1693637cc226"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["InterpolatingFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5w/f/////PPzd0wYnD
3cQ/zu0c/Av0zT/SUFjDa77VP/VL5fuprMc/IqE47Akn4D/h3a6Nmza+P9Wb
k3tZVOU/6HKtjfzYpT+7wbiC/fHqP0ZstD2thqO/gEqXStgX8D9QQbhJOkW6
v7tJtw/c7vI//zhluwNww7/ziT6Xnbj1P1qUOhwAS8a/2iBupGZS+D/oWW/J
/NnFv1rNgu1ZJPs/1S5WgI1Uwr+J0D+8VMb9P4wb+Zmfubm/WwqypoYtAECI
Oqtqlj6pvz63Ng34kwFAPMxa9RE8gT94j482beICQKKw1WOLKq0/f/LaffdM
BECNt2K/YNW4PwX2WabgsAVAtUUdCQl7vj/iJK2RzfwGQLitP5kDZr8/jN7y
ms9kCEAxC0JJM+e7P43DDGfVtAlA1+jWDD40tT9bMxlR8CALQBbqPX6UC6c/
p0NZHGqGDECBlyrAdStyP0t/barn0w1AwGGgVdPKn7+8RXRWej0PQFSRkMLJ
q6+/wpunYohHEEDxc+4FdoG0v+XkrgoD7RBAnRkv1M0otr9vc69BiKARQMQ3
GEljtbS/pRcaWg9IEkA6gqu5M7ywv0EBfgGh/RJA1yHlvUDQpL8cu3sZ4q8T
QEqfaMH2pYm/oorjEiVWFECLh2IqfzyLP4+fRJtyChVAeKw5vV75oj8oyg8F
wrIVQDI7W9Ay66o/AMV038BXFkA4VExkDcCuPz4F00jKChdA0iMbWrpJrj8o
W5uT1bEXQAd5yBYd7ak/ePZcbetmGEBf1AE7/+qhP3SniCgDEBlAPGtx7mlC
kT+vKE5UyrUZQPw+4jhxVVu/Ue8MD5xpGkB/Be2xXk6Uv5/LNatvERtA/mbU
XazPoL9T7VfWTccbQJFQJbuhAKW/R98Tctt5HEBesXPxL7qlv+bmOe9qIB1A
NYSjptSFo7/rM1n7BNUdQJYjNeuBJ52/nJbi6KB9HkDBUU5AJMOQv4zJBUfs
Ih9Ap11jtgmsa7/iQSI0QtYfQNY7IhhIe4Q/8mdUAc0+IEBT/305Sq6UP6ZR
FDB+mSBAKIM04CQWnD96IyEXh/IgQGxDBLLisp4/JADj7pBFIUAtx4Uo7Pic
P4F/IQ6gnyFAFHX3Wt8vlz+0CRUesPMhQCf9eeXMRo4/mjaFdcVOIkCgF0Dp
0PNzP59LQoUyqCJAZKQ0/TJ8c796a7SFoPsiQKPq483ubom/CC6jzRNWI0CA
7xRJiLKSv2z7RgaIqiNATHiZm5pXlb8yFFD6//8jQBb/A/RFAJW/FUrMMA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$15279#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 10.}, {-0.17416383150444653`, 
                  0.2499999999999818}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj5w/f/////PPzd0wYnD
3cQ/zu0c/Av0zT/SUFjDa77VP/VL5fuprMc/IqE47Akn4D/h3a6Nmza+P9Wb
k3tZVOU/6HKtjfzYpT+7wbiC/fHqP0ZstD2thqO/gEqXStgX8D9QQbhJOkW6
v7tJtw/c7vI//zhluwNww7/ziT6Xnbj1P1qUOhwAS8a/2iBupGZS+D/oWW/J
/NnFv1rNgu1ZJPs/1S5WgI1Uwr+J0D+8VMb9P4wb+Zmfubm/WwqypoYtAECI
Oqtqlj6pvz63Ng34kwFAPMxa9RE8gT94j482beICQKKw1WOLKq0/f/LaffdM
BECNt2K/YNW4PwX2WabgsAVAtUUdCQl7vj/iJK2RzfwGQLitP5kDZr8/jN7y
ms9kCEAxC0JJM+e7P43DDGfVtAlA1+jWDD40tT9bMxlR8CALQBbqPX6UC6c/
p0NZHGqGDECBlyrAdStyP0t/barn0w1AwGGgVdPKn7+8RXRWej0PQFSRkMLJ
q6+/wpunYohHEEDxc+4FdoG0v+XkrgoD7RBAnRkv1M0otr9vc69BiKARQMQ3
GEljtbS/pRcaWg9IEkA6gqu5M7ywv0EBfgGh/RJA1yHlvUDQpL8cu3sZ4q8T
QEqfaMH2pYm/oorjEiVWFECLh2IqfzyLP4+fRJtyChVAeKw5vV75oj8oyg8F
wrIVQDI7W9Ay66o/AMV038BXFkA4VExkDcCuPz4F00jKChdA0iMbWrpJrj8o
W5uT1bEXQAd5yBYd7ak/ePZcbetmGEBf1AE7/+qhP3SniCgDEBlAPGtx7mlC
kT+vKE5UyrUZQPw+4jhxVVu/Ue8MD5xpGkB/Be2xXk6Uv5/LNatvERtA/mbU
XazPoL9T7VfWTccbQJFQJbuhAKW/R98Tctt5HEBesXPxL7qlv+bmOe9qIB1A
NYSjptSFo7/rM1n7BNUdQJYjNeuBJ52/nJbi6KB9HkDBUU5AJMOQv4zJBUfs
Ih9Ap11jtgmsa7/iQSI0QtYfQNY7IhhIe4Q/8mdUAc0+IEBT/305Sq6UP6ZR
FDB+mSBAKIM04CQWnD96IyEXh/IgQGxDBLLisp4/JADj7pBFIUAtx4Uo7Pic
P4F/IQ6gnyFAFHX3Wt8vlz+0CRUesPMhQCf9eeXMRo4/mjaFdcVOIkCgF0Dp
0PNzP59LQoUyqCJAZKQ0/TJ8c796a7SFoPsiQKPq483ubom/CC6jzRNWI0CA
7xRJiLKSv2z7RgaIqiNATHiZm5pXlb8yFFD6//8jQBb/A/RFAJW/FUrMMA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$15279#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 10.}, {-0.17416383150444653`, 
                  0.2499999999999818}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     InterpolatingFunction[{{0., 10.}}, {
      5, 7, 2, {170}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1:eJxF1Pk/FHgcx/EZyxyMc8aYEzPjSnasIqnh+5GoNmT06FpETId6SI9ys+RI
LYmMo8gWiiItq3UtbSE5OoZW2CkqbK7kyoSw83j0w74fj9fj+R+8Ob6B7ocV
MBgMVl4J5v/JPpk38EEXfZOPBgM4dcVkERJNWm8t4pxBrwy9S8NsopB+iPCh
/+YURLnoYd/6OgPRvC4VSJm5SC37bWxo2Q2Uthq+DvusEIkld8UUUgl6Kglc
FBuWIxcbYinbsRK9yC/wKBZVIaGygGSRUIvwbV9v2dY/QsMXpY99q1pQk1vd
8PnyDiRMehq3d48EwcSfWv5dXcjctbQgclc3uknZyBjo60V0afPlLaLX6FK+
kFg0OYAULAMfJtS/Q4Jsq6iq2EEUurhkPeI0jCq8GmfppA9oIm0t9w+1UWTc
nOHmpjmOfGXL0ePkjyjP9GhZIvUTmuCPfEy7OIV+aWWd60+ZRsa+QpZZ6gza
WrlBplQ9iw4psroG+udQ9B5sWS1uHuUW/XtezJehGlmHb8DeL6h7e4XttugF
NHM1i8YpWkTq45Gzi8+WUHKnXbXtwFeEr8FGnp1aRvG/Nts1YVfR2UYHbDwR
Aw+sDP0M0jHw9Tbu8WMGFjaxRoyOFmIhLLXtAsFMAUyXjVUMehTgzfHEFBT3
HaT1Dql7fK8IDk4O6SG9ijBfmU9Jj1eCOxxMdhkfB56pB+ltfThQW67PHUrA
A9n5fafeKB5ouXiChwsB2GNmdlkVBODauAd1ahPB+EJoCSmCCGY9195u6yeC
hVEjNX6LMohbSwtU7yvD5+OZ/CuGKrBXNaaOm60CNb8dcyojkIDh7t5lHUGC
qLnNBxvHSdCfZTjm7KUKScKswBiJKliT8J8rHNRgsCU0YqhKDdJiR1appuog
EBw4tyNPHYKXREp2BA3o2M/e3mOvAcWOx27hxRoQv65SYeOQBvjorXgfs9IE
AWlHw5VETaAtiBltPZowN9wfumCiBZ1da7rXRGhB2V9B637q0IKeTqEym0YG
7BD//YCIDGvnVeoKKsiwhzB6+fAKGWIYLf4mOylQYlZoP55Ngb/tztLvDVFg
xc1r+pSFNpj4bWpbH60N7sE6+fPt2hB1fi6sVocKkc/Dlzk7qRChvRqbFE2F
cM8E3GwFFcIKickew1QIHbuk3kzTgRALSoaZs9ywq7TMGB14h3tTyK/SAedM
ffPWCR2o5onqDvFowP292HHpAA1SYFySkUaDL8/5nvwnNPDzOv3hyTINjLLP
DJMt6TAqCRr0Pk6HMuWQd6U36HBqa+iA7BUd1keHvXFQZYCsOlya6sCAuumI
Pmm43LhADLFeLllkvGGFAbU397v6ARNqrVyC0+Lktthfa2hmQs2+DU1jOBbU
jJiO6exgweGb0yVNeSwg+9ScCJxhwUNmjBlzGxsCehw/tuSygSkm3Ts9xYZW
15cndR11IUQ5x7z9qi7wWnymgid14TLWINFEqAergg9MaaUeWAu6e51U9GGy
r4p3Q6APt0KvnFwI0AdP7Yha9+v6QK70ULwr0Yd2N9tdSgocaJeeOxLElHvk
+c+DlnKnqZnurhxoi/K+++ioXPztph9i5aZP/XM9Ry7bZkbtPgd2J+12tZVw
oH8+oOTEBAf8/S7gcghcmHtR4NtqwIVoQcODeeAC8U4Pw9CLCxnaMyG7w7mg
F0d6GZvJhTuTRublFVyw9LBP7n/GhXJ7iUGQjAtrTbwfEDk8KFKb3Hf9Rx5w
P0dNWwbxIE+qktyexwN6Y46BzxMekA65aJUP8iCx3IjYO82Dby9qAP8BdD5K
+A==
      "], {Developer`PackedArrayForm, CompressedData["
1:eJwt0QFrDgAABNBvNE0WbRFZZE3TFllbW0RkTdY0MYto2pq2trYsIppoItoi
ImtryyKLyNqyJmvamrZosoi2aKItsra2Jsua2NNcvR9wd5G5JRlHggKBwMPA
bOYyj/mEsohwlrCMCFYSyWrWEMs64kggiY1sZivJbCeVnexiD5ns5yCHyOEw
+RRSTAnHOMEpTnOWc1zgEhVc4Ro3qKSaWuq4Qz33//dsoIlmntDKMzp4Tjcv
eUUvb3lPPx/5xBeG+MYwo4zzg0mm+M1f5hg4mBAWsJAwFrOU5axgFVFEE8Na
1hNPIhvYxBa2kcIO0khnN3vZxwGyyCaXPAoo4t/hRznOSUo5QxnnuUg5l7nK
dW5SRQ23uM1d7vGARzTymBae0kY7nXTxgh5e84Z39PGBAT4zyFe+M8IYE/zk
F9P8YQYkQlgJ
       "], CompressedData["
1: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
       "]}, {Automatic}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8453688626809816`*^9, 3.845370216909108*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"d9fd5f31-4a1a-4516-8241-bef49a99c80d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Theorotical", " ", "case"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8453702306361656`*^9, 
  3.8453702426887503`*^9}},ExpressionUUID->"d502d46c-e4eb-4d3c-82ee-\
db277e19f9a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"theoreticalSol", " ", "=", " ", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Riffle", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"y", "[", "i", "]"}], "/.", "Solution"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "0", ",", " ", "10", ",", " ", "0.2"}], 
           "}"}]}], "]"}], "]"}]}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fitting", " ", "=", " ", 
   RowBox[{"FindFit", "[", 
    RowBox[{"theoreticalSol", ",", 
     RowBox[{"a", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"b", " ", "*", "x"}], "]"}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"d", "*", " ", "x"}], "  ", "+", " ", "c"}], "]"}]}], " ", 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", " ", "x"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"theoreticalFit", " ", "=", " ", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"b", " ", "*", "x"}], "]"}], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"d", "*", " ", "x"}], "  ", "+", " ", "c"}], "]"}]}], " ", "/.",
    " ", "Fitting", "\[IndentingNewLine]"}]}]}], "Input",
 CellChangeTimes->{{3.845300216250028*^9, 3.8453002170506268`*^9}, 
   3.8453008959421597`*^9, {3.845370208616344*^9, 3.845370214586062*^9}, {
   3.845370247295882*^9, 3.8453704168076553`*^9}, {3.8453706363284516`*^9, 
   3.8453706466279683`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"90fb082b-3791-4d52-97bb-65185ed7ac48"],

Cell[BoxData[
 RowBox[{"0.16371756604815593`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "0.15523775537796408`"}], " ", "x"}]], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"0.5063582773310465`", "\[VeryThinSpace]", "-", 
    RowBox[{"4.8468222303675415`", " ", "x"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.845369465716568*^9, {3.845370331616172*^9, 3.8453703606891174`*^9}, 
   3.845370420018095*^9, 3.8453706480881615`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"3ef933df-3d43-40ca-9c22-071f3c679f98"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Adding", " ", "White", " ", "Noise", " ", "to", " ", "data"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NoisedData", " ", "=", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Riffle", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"y", "[", "i", "]"}], "/.", "Solution"}], "]"}], "*", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0.1"}], "}"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "0", ",", " ", "10", ",", " ", "0.1"}], 
             "}"}]}], "]"}], "]"}]}], "]"}], ",", "2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8453002437694483`*^9, 3.8453002444494457`*^9}, {
  3.8453704292480803`*^9, 3.845370461698407*^9}, {3.845379215290395*^9, 
  3.8453792172728915`*^9}, {3.84537938769606*^9, 3.845379399617555*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"168d4b6f-449a-4f75-bffb-f34b17e2e655"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Least", " ", "square", " ", "fitting", " ", "random", " ", "noise", " ", 
    "values"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LSFit", "=", " ", 
     RowBox[{"FindFit", "[", 
      RowBox[{"NoisedData", ",", 
       RowBox[{"a", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"b", " ", "*", "x"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"d", "*", " ", "x"}], "  ", "+", " ", "c"}], "]"}], " ", 
         ")"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", " ", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"FittedExp", "=", " ", 
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"b", " ", "*", "x"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"d", "*", " ", "x"}], "  ", "+", " ", "c"}], "]"}], " ", 
       ")"}]}], "/.", " ", "LSFit"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.8453009304307165`*^9, {3.84537047421804*^9, 3.8453705197118597`*^9}, {
   3.845379224802143*^9, 3.845379227350922*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"c5c08bec-8eea-4d3c-b9a7-0618f7f36f50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.12573126447954044`"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "0.22397241520531666`"}], " ", "x"}]], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"9.563763667070521`", "\[VeryThinSpace]", "-", 
    RowBox[{"2.2243599398272274`", " ", "x"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.8453689169607754`*^9, 3.8453705214034877`*^9, 
  3.845379295796362*^9, 3.845379404121798*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"1d01104c-5c26-4196-b60d-ff545307c91c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plotting", " ", "theoretical", " ", "data"}], ",", " ", 
    RowBox[{"noised", " ", "data"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "least", " ", "square", " ", "fit", " ", "of", 
     " ", "noised", " ", "data"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"S1", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"theoreticalSol", ",", " ", "NoisedData"}], "}"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Yellow", ",", "Cyan"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<Theoretical Data\>\"", ",", " ", "\"\<NoisedData\>\""}],
          "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2", " ", "=", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{"FittedExp", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}], ",", " ", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"PlotLegends", " ", "->", " ", 
        RowBox[{"{", "\"\<Least square fit\>\"", "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"S1", ",", " ", "S2"}], "}"}], ",", " ", 
     RowBox[{
     "PlotLabel", " ", "->", " ", 
      "\"\<y''[x] + 0.25*y'[x]+5*y[x] = 0, y[0] = 0.25, y'[0] = 0\>\""}], ",",
      " ", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", " ", "->", " ", "Automatic"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.845300344633212*^9, 3.845300358446911*^9}, {
   3.845300448876358*^9, 3.845300455869135*^9}, {3.8453008402363577`*^9, 
   3.845300855383762*^9}, {3.8453697193602037`*^9, 3.8453697461040397`*^9}, 
   3.8453697836204147`*^9, {3.8453698239862022`*^9, 3.8453698823688507`*^9}, {
   3.845369912816244*^9, 3.845370031171993*^9}, {3.8453700658693595`*^9, 
   3.845370088996068*^9}, 3.8453701306880507`*^9, {3.845370531415903*^9, 
   3.8453705564684134`*^9}, {3.845377205061102*^9, 3.845377206291344*^9}, {
   3.845379235713216*^9, 3.845379270896431*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"eb733643-a8fd-40b9-a1f7-6ab00aea07ad"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.009166666666666668], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxd01lIlFEUwPFxzX0ZR0fHbZYINSxKC6TonsoiKJeEEgtyyyQsCsEs80Ep
X9TATHPJzHJpVWtIw1LH0BLLULPEMMNRUVrIRLEyW7Rz7gXnwvcwzNz/Pfdj
fqq4ExEJJhKJ5PDiY7T4GEsMVy8rLVlaTQzqmk6enu2mz12sPbUhVtvZwQID
llY/W2vu3f94QUvfv2ORqVr/sO+XdNgZYX6K4Bnrp006/P0YK1Pkfgh4365L
PLK0JthYyq5O5annOtz/kRVNfI1NLOvQvepeWl9Yg9no0RCfVup9Y8GJHf0l
klr6/TQb9XVPdbc8R/PMsODR/fciNjxguH+WRVeH+N9PfMLwvDm2p1K/MT1D
x7D3g223zPQ1Dm+h+X+yqcysltDBBur9Yr096smCv9XUW2Ct6burSqeTaP4/
bOpiku+NyRqaTwLdx5PyivVaml8CyqH1NXcdG2leI/CWrVpT9voh7TeGwL1f
9oUX19P7MYGUaKu5iMsV1DOFjOa2rTuHfOh8U5D/1m8biiqnec0gakd6Qub8
bbqfOQzc0r5xHa+j+VfAfCPb0nehlu5rAfl9cqtfPTXUs4AR7aO7eaPF1LOE
O+PZdttjIqlnBQcGi8LGjQpoPmu4dnC41nbwOs1nA6GdU8/UJdV0XxvoSstL
Gpypovvawk+ZvT40uYLuawfdubti5gryqWcPRskmvjmbY6nnAOfXHfrcEpRN
5zvA6WPX423PFNO8DrAho9Ovf3U5+789wBF+995MkNZdpfkdYeRKfbxXXRHd
VwozIxUvwypzqCeFhNtzZ1emxVFPCnYDVUE90kyaxwlKsoZtXrTl0fxOUHkl
atM220KaTwbNn5Lf7pAU0n1kwL1gTwbcC/acgXvBnjNwL7jPBbgX7LkA94I9
F+BesCeH5V7kwL1gzxW4F+y5AveCPVdY7sUNuBfsuQH3gj0FcC/YUwD3gj0F
LPfiDtwL9tyBe8GeB3Av2PMw8OIhvGDPU3jBnqfwgj0v4QV7XgZevIQX7HkL
L9jzFl6wpxRe8P+lFF6wrzTwohRe8Dyl8II9lfCCPZXwgj2VgReV8II9lfCC
PbXwgj21gRe18II9tfCCPbXwgj2N8ILvR2PgRSO8YE8jvGBPI7z8Ax2VwLQ=

          "]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> 
                  RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                  False]], Appearance -> None, BaseStyle -> {}, 
                BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               RGBColor[0, 1, 1], Editable -> False, Selectable -> False], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.009166666666666668], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxF0nlMk2ccwPFCkbuc5WyhF6uIbA6wKqI+v7GQhcNwzYUBMgY4RYZQaaEB
JregHFVwCBtgiQWLhHAMGCpa2dzEObYlyj0X7IisZhM5pjAoDNYf2S95/2je
5/m87/N9y4lLCTtGpVAoxzYunY1Ll/L/hNS0EIFXF/midnNukHF/ez/h8F38
/YBMPo1bar0/SHZ7bc4jksBfimVd68D744QZw3lbaPkV0WpTJMwzI2XPegeu
/50Ir3Ir6N0ycvyTzXlG6vbu4+d5FeJ+NVl6HjT864lM5dCPm/Mnad4Ryrwk
alNqvZekLNCtJN67UqldP0ckrjo207q9Sq2/QEZbZf6dTt24f5H40PVt+o17
ldrnvSKpPf8UGBp8jd4SkfUHyYcTe9FbJoLgzALNjuvorRDbAWafYr0RvVVy
RK+OT+u6jd4aOVlbBDqlPehRIDz6dPK92eu4ngK9K9d2MegS9HXgnc8K482c
M/H8unBorq/MN1SEfajAb4koOuzejP30wMg3fONztROtpwfj7rlqJ9ce7LUN
oktpGQt2XejpQ7NHT9qjznr0DOBbuyKPW5ZK9AxBEFP+7olnUvQMYZE3GidZ
b0HPCHiWzp++jtzyjOHilYBp4UwxeibwYtlUXdHRhJ4pBN0+Q1ucKUXPFFIU
jn3JS8F4XhosdOaMbD94FnuZQcUBjdo/sgT7moO0wrB15UEL9rOAQ9/7pVe2
K3C9BVh9dNOBdHRhTwsYPxvrvjykUP633csS+gbzP0z8QIHPs4TlbYUz3XZd
6FnBwPkA6fnOfPSsoFw1bp09nYueFZxJpr6qdSnD97GGtqonLP2sevSsQezK
dylXRaJHBz/ZE7O9t6yxDx369v1hcPXC1vnpYJTwUFp1Soi9bMCtcWUx1qgC
+9rAPHUgTT0rw3624K45HSNS1KJnCyPxY5O0+Sr0bCGq/+Lke9Fy9OygYbcn
f0jQhJ4dGKeFDOiuyNGzB+OsCE2Gpg49ezjnF5ItpjWgZw9/jySMsA5Vo+cA
a5xUauipPPQcgNJ2L2qyJww9Rzjuf5f7OHOrnyMkjTt92SYpxX6OoP5tdCw/
vhj7MeBNj6f7c7NqsB8DXMzvFwxmFGI/JpQytk9N9Taix4Qi1ce/hN2pRI8J
JnpLP6sUNeg5wQHfneGP78jQc4Jg8ahAXFiPnjP0BKauOr/IRc8ZWiSV7uUT
UvScQcOwiGh6eBQ9Fuzsitr/RmQgeiwYbB043B0VjOdlg3Qtc859IYZo/19s
UFPf56p+qMSebCiWiSccORewFxvKajTfpCdVYl826Mz636xOFqPHAY1GLipJ
zUePA/OxB8cm2i+hxwFvsb6xqTIHPQ6Qv9zWjS9Xo8cBcNqTKu8UoscFAe1z
xo2kPPS48NJzOfKkjwQ9LvyUs2LU+TwGPS4cbeDsGvouEXtwoaVfkh7BEmI/
HpjIxD4+GSLsw4PG14wEkXk59uRBgPKty+HzOdiLB+eiSbTnkWz0eOAdNXCF
rchDzwVUM2Hz8tV05b+ma7U4
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$42567#1"]& ]}}, {}}}, {
    PlotLabel -> 
     FormBox["\"y''[x] + 0.25*y'[x]+5*y[x] = 0, y[0] = 0.25, y'[0] = 0\"", 
       TraditionalForm], PlotRange -> Automatic, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10.}, {-0.17547998171441667`, 0.25}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Theoretical Data\"", "\"NoisedData\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666666, 0.6666666666666666, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 10, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.6666666666666666, 0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 10, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Least square fit\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8453689557205095`*^9, 3.8453694696755238`*^9, {3.84536982527643*^9, 
   3.8453698380963135`*^9}, 3.845369869070142*^9, 3.8453699161896324`*^9, 
   3.845369952653057*^9, {3.8453699850353003`*^9, 3.8453700317809134`*^9}, 
   3.8453705794352713`*^9, 3.8453706551602774`*^9, 3.845377214731773*^9, 
   3.8453793024500227`*^9, 3.845379407212051*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"f654a6c0-a66f-45be-afc3-f9417baf1f59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "[", "x", "]"}], " ", "/.", " ", "Solution"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "x", "]"}], " ", "/.", " ", "Solution"}]}], 
      "}"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<y[x]\>\"", ",", " ", "\"\<y'[x]\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Phase Potrait\>\""}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "1.5"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845300612166405*^9, 3.845300612896767*^9}, {
   3.8453008242393513`*^9, 3.8453008253893604`*^9}, 3.845300941523252*^9, 
   3.845370055183976*^9, {3.845370678664609*^9, 3.845370687191863*^9}, {
   3.845377337269581*^9, 3.8453773495797615`*^9}, {3.845378833754012*^9, 
   3.845378849068716*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"fb66360c-d7f9-438a-8dec-a716c09723cd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
rw8DJt//bvxdhiJZibIhOb2YYxfqSi1Rjv7BMjcefuzFVzen3zU7lePJReUT
Yya9WHsmhXkPfQX6BMj6KHP2ImeQL/ulA5Wom0ys7vHtwe6mtHMJuxBDDFRt
8592o+irmqkQScT7rEFs2hLdOHiZTvuwE2KugBfDyNFu/Pez3zJyA7G+LeWL
SnMXDizOH18xr0bP0Oult853YYCc0BlbhRqMHJOUDJ7vwLwU7/Q9JjV4+OX+
10W1HbhlfD5I06UG324/SMgLo7BCKYoX12CX3jjclO5AVj+1t7PHa9Ghkjz3
8WY7Sjs8qOwdqEU3rXOPpiJasYbLQlRqsRb/Y66w573TitcTsv+Y76xDk5xk
9ytLLZiR/qZiS7AOR+mT68put6CAoFPVhGsdWob5exl9a0LDblrLspNEvF87
56LD14Cb+z7c1r5IRPXCdRmdJhI+tLVfzL5DRA6Ob8MiJiQ8xnFQUfM5EbXa
eAWNUuvRBMZje/OJyHTk1b+DPEQkmrKXzBCJ6L2RHf21rg75dhfkxfZS5tta
hMTo1aGGcuV39jUipokxKJTG1GJ2S/+K0MV6VEnpny1nqcHX0fXRSTfrMZFO
xaS+qBqNKgOc6u/XI+MZ08LyB9Uo+7o7f/ezetSVDev7dgrRf0JDKz6qHtVT
5KLs9ldgAd0VNau0epT7d9wkU7Yc4xpKL6wV1KOyZ2lKq2sZlgeg1u/meiSd
b/o8+6cE00d41fct16Ok+PNnX74UInXNXDds1SMKXqCa5ShElfb2E+w7SWi6
eNLnl2YBMsu58Y4xk3AxdqmOpzsPv8wfXEM2EsbfYtt8sD8Pk7kvpcjzkPDw
nkP3g2VzUWw/ue/5RRJy8NwlFThm4+o3a5N/YiQ8lB6iWr+ehZE55+iv3SBh
r5fHjYMvM1HRZx157pCwvV2VLuJLOt7qZo4pv0vCT0WzZ55pp2Hty6WCv4ok
PJPXx+nel4J6DicYvz8koauprsVPhWTczx4yR9YmoUt5/VLbjQSUP/vNu0aP
hDcIHxnulcXht9BPRF1DEh7c5pe/IBKL0pW/UgiUe01y/82/pRmFI1VxCqnP
Sbj97oz9O+VwfInynQovSSjcEH37q0wIDrKRZeNfkfBp1y0+uRuBeDDmWHf8
axIG/ne8k3DFD0VD7nsqviGhXXx6Jjz1xhTGLM8MKxL+u+Qcel/dHXdt+/7K
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
zrgPqbIR/nX60FgaEgX/A12qx34=
       "]]},
     Annotation[#, "Charting`Private`Tag$40232#1"]& ]}, {}},
  AspectRatio->0.6666666666666666,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"y[x]\"", TraditionalForm], 
    FormBox["\"y'[x]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox["\"Phase Potrait\"", TraditionalForm],
  PlotRange->{{-0.17556367858972174`, 0.25}, {-0.4744027232600117, 
   0.3331523617449845}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.845377350841913*^9, {3.845378841718349*^9, 3.84537885012259*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"c8a2b172-f565-4ebb-9ad7-abf450ac7302"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Numerical", " ", "soltion", " ", "for", " ", "a", " ", "underdamped", " ",
     "forced", " ", "oscillator"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ForcedDamped", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"z", "[", "t", "]"}], "/.", 
    RowBox[{
     RowBox[{"Flatten", "[", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"z", "''"}], "[", "t", "]"}], "+", 
            RowBox[{"0.5", "*", 
             RowBox[{
              RowBox[{"z", "'"}], "[", "t", "]"}]}], "+", 
            RowBox[{"20", "*", 
             RowBox[{"z", "[", "t", "]"}]}], "-", 
            RowBox[{"0.3", "*", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.5", "*", "t"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0.25"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"z", "'"}], "[", "0", "]"}], " ", "\[Equal]", "0"}]}], 
         "}"}], ",", "z", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.84536705104045*^9, 3.84536705797027*^9}, {
   3.845367101786321*^9, 3.8453671040398016`*^9}, {3.8453671861469007`*^9, 
   3.8453672131637325`*^9}, {3.8453674094381657`*^9, 3.8453675352168055`*^9}, 
   3.8453675794164853`*^9, {3.8453774359631357`*^9, 3.8453774363386154`*^9}, {
   3.8453774809978995`*^9, 3.845377520486207*^9}, {3.845377552627889*^9, 
   3.8453776119549894`*^9}, {3.845377739947886*^9, 3.8453777423914824`*^9}, {
   3.8453780774359694`*^9, 3.845378112458539*^9}, {3.845378143426156*^9, 
   3.8453782489158645`*^9}, {3.8453787563442297`*^9, 
   3.8453787944190187`*^9}},ExpressionUUID->"6034ccbe-e24a-4dc4-833b-\
b29d1f92c636"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{
    TagBox["InterpolatingFunction",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj779f/////PPzd0wYnD
3cQ/LExi1zuOyD/SUFjDa77VPxvMNjPVx6M/IqE47Akn4D+yZQ0gQF67v9Wb
k3tZVOU/9KD39i4Ex7+7wbiC/fHqP559dpcQ2cK/gEqXStgX8D9rpSwNb8Gi
v7tJtw/c7vI/PH6m8NtUuT/ziT6Xnbj1P1vj0uMnJsY/2iBupGZS+D83Xwvh
uPnDP1rNgu1ZJPs/mrk7GA4krz+J0D+8VMb9P5qqx4ser6i/WwqypoYtAECK
zIcnhJO+vz63Ng34kwFAmEZDdzMRv794j482beICQFc2FBP2mK2/f/LaffdM
BECA07+SfAGkPwX2WabgsAVA3c2lg8Z4uz/iJK2RzfwGQFt2FcniSb0/jN7y
ms9kCEBsthpDiCSvP43DDGfVtAlAd8ghdvj9kL9bMxlR8CALQNGuV52iZLW/
p0NZHGqGDECl4pYSjie5v0t/barn0w1AkZbzfuIZsL+8RXRWej0PQGY503qT
62w/wpunYohHEEA/jEbXy/WsP+XkrgoD7RBAFy6n5Lrtsj9vc69BiKARQGg5
CULmKqg/pRcaWg9IEkCwex2/zwZzv0EBfgGh/RJArhy8XMrVrb8cu3sZ4q8T
QLJT7QJfibS/oorjEiVWFEA9/esXY5Wwv4+fRJtyChVAgCa4sGDclb8oyg8F
wrIVQNh2FNJPKpU/AMV038BXFkB2R0KqvJ2lPz4F00jKChdAO4qZWcQUoT8o
W5uT1bEXQNuT1YMAilY/ePZcbetmGECwM2VZ79ajv3SniCgDEBlAFsYtxixd
r7+vKE5UyrUZQCv0zZqdRq6/Ue8MD5xpGkAibDNDQw2hv5/LNatvERtAqs90
ZH6aVr9T7VfWTccbQN/E0MEeMZc/R98Tctt5HECwFV26klKYP+bmOe9qIB1A
gts7bJC7dz/rM1n7BNUdQBgwlu4KmZa/nJbi6KB9HkDWhw3qiCqlv4zJBUfs
Ih9ATs/JpsjGpr/iQSI0QtYfQOmY4DlaWJ6/8mdUAc0+IECwh8keRaJ7v6ZR
FDB+mSBA0HIPdGyFjT96IyEXh/IgQAlBOzu9j5U/JADj7pBFIUA3jkh4YDSK
P4F/IQ6gnyFASh/zRZSndb+0CRUesPMhQNMD8ZosHpW/mjaFdcVOIkB4iCjA
rLaav59LQoUyqCJA9A5fcInykb96a7SFoPsiQIeAZCkV7Vm/CC6jzRNWI0Bm
IZeEIiGPP2z7RgaIqiNAZBNhRBZklz8yFFD6//8jQMMtCEVfY5Q/GFnHkw==

                    "]]}, 
                  Annotation[#, "Charting`Private`Tag$33152#1"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
               GridLines -> {None, None}, DisplayFunction -> Identity, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{0., 10.}, {-0.17981516894293004`, 
                0.2499999999999288}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"scalar\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj779f/////PPzd0wYnD
3cQ/LExi1zuOyD/SUFjDa77VPxvMNjPVx6M/IqE47Akn4D+yZQ0gQF67v9Wb
k3tZVOU/9KD39i4Ex7+7wbiC/fHqP559dpcQ2cK/gEqXStgX8D9rpSwNb8Gi
v7tJtw/c7vI/PH6m8NtUuT/ziT6Xnbj1P1vj0uMnJsY/2iBupGZS+D83Xwvh
uPnDP1rNgu1ZJPs/mrk7GA4krz+J0D+8VMb9P5qqx4ser6i/WwqypoYtAECK
zIcnhJO+vz63Ng34kwFAmEZDdzMRv794j482beICQFc2FBP2mK2/f/LaffdM
BECA07+SfAGkPwX2WabgsAVA3c2lg8Z4uz/iJK2RzfwGQFt2FcniSb0/jN7y
ms9kCEBsthpDiCSvP43DDGfVtAlAd8ghdvj9kL9bMxlR8CALQNGuV52iZLW/
p0NZHGqGDECl4pYSjie5v0t/barn0w1AkZbzfuIZsL+8RXRWej0PQGY503qT
62w/wpunYohHEEA/jEbXy/WsP+XkrgoD7RBAFy6n5Lrtsj9vc69BiKARQGg5
CULmKqg/pRcaWg9IEkCwex2/zwZzv0EBfgGh/RJArhy8XMrVrb8cu3sZ4q8T
QLJT7QJfibS/oorjEiVWFEA9/esXY5Wwv4+fRJtyChVAgCa4sGDclb8oyg8F
wrIVQNh2FNJPKpU/AMV038BXFkB2R0KqvJ2lPz4F00jKChdAO4qZWcQUoT8o
W5uT1bEXQNuT1YMAilY/ePZcbetmGECwM2VZ79ajv3SniCgDEBlAFsYtxixd
r7+vKE5UyrUZQCv0zZqdRq6/Ue8MD5xpGkAibDNDQw2hv5/LNatvERtAqs90
ZH6aVr9T7VfWTccbQN/E0MEeMZc/R98Tctt5HECwFV26klKYP+bmOe9qIB1A
gts7bJC7dz/rM1n7BNUdQBgwlu4KmZa/nJbi6KB9HkDWhw3qiCqlv4zJBUfs
Ih9ATs/JpsjGpr/iQSI0QtYfQOmY4DlaWJ6/8mdUAc0+IECwh8keRaJ7v6ZR
FDB+mSBA0HIPdGyFjT96IyEXh/IgQAlBOzu9j5U/JADj7pBFIUA3jkh4YDSK
P4F/IQ6gnyFASh/zRZSndb+0CRUesPMhQNMD8ZosHpW/mjaFdcVOIkB4iCjA
rLaav59LQoUyqCJA9A5fcInykb96a7SFoPsiQIeAZCkV7Vm/CC6jzRNWI0Bm
IZeEIiGPP2z7RgaIqiNAZBNhRBZklz8yFFD6//8jQMMtCEVfY5Q/GFnHkw==

                    "]]}, 
                  Annotation[#, "Charting`Private`Tag$33152#1"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
               GridLines -> {None, None}, DisplayFunction -> Identity, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{0., 10.}, {-0.17981516894293004`, 
                0.2499999999999288}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"scalar\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["3", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["False", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   InterpolatingFunction[{{0., 10.}}, {
    5, 7, 2, {367}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
     False}, CompressedData["
1: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
oEeAswyJBewRAf73trXxb43rCdU=
    "], {Developer`PackedArrayForm, CompressedData["
1:eJwl04ebDwQcBvCfMzIO2Rx3XPaWcU62nE3ILruUjDsnIXul1MlKNpHCoayU
7E1GGbk6zp5ZRUauro/H+zyf9w/4fp83vEd06/6pAoFAzNOS1KQjA8FkJTu5
yEt+wginCMUpRVkqUIkIqlGD2tQjikY0pQWtaEN7OtGZbvSkF73pSzSxDGII
wxjJGMYzkUnEMYXpzGQ281jIYpayjHhWs4b1bGQTW9jOLvZygEMc5RgnSSCR
JM5ziavc4BZ3uccDHpNMCkFum5b0ZCIL2chJHkIIpRCFKUZJylCeilQhkurU
oi71aUgTmtOSV2lHR16nKz14k7fpw9OHD+BdBvM+IxjNOD7gIz7hU6bxGbOY
ywK+4Eu+ZgWr+JZ1fMcPbGYbO9nDfn7iCL9wglP8zhnOcZErXOcmd/iLv3nE
E/4jVVAgkIbnyEhmnicHuclHAQryAkUpQWnK8SKVqcpL1KQOL9OAxjTjFVrT
lg68Rhe68wZv8Q79iGEg7zGU4YxiLBP4kI+ZzFRm8DlzmM8ilvAVy1nJN6xl
A9/zI1vZwW72cZDD/MxxfuU3TnOWC1zmGn9wmz+5z0P+4d+gZ+NPTToyEExW
spOLvOQnjHCKUJxSlKUClYigGjWoTT2iaERTWtCKNrSnE53pRk960Zu+RBPL
IIYwjJGMYTwTmUQcU5jOTGYzj4UsZinLiGc1a1jPRjaxhe3sYi8HOMRRjnGS
BBJJ4jyXuMoNbnGXezzgMcmkEJTG/klPJrKQjZzkIYRQClGYYpSkDOWpSBUi
qU4t6lKfhjShOf8D1Yey5g==
     "], CompressedData["
1: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
5gcs4RLC9Mk/cOG34j8mzxb8H2JvJTE=
     "]}, {Automatic}],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "t", "]"}]], "Output",
 CellChangeTimes->{
  3.845377317001051*^9, {3.845377528119914*^9, 3.8453776137261477`*^9}, 
   3.845378115226707*^9, 3.8453781455721545`*^9, {3.84537820276988*^9, 
   3.845378250306384*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"254529d2-7336-4806-9c79-73481097997d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ForcedDampedSolution", "[", "t_", "]"}], " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"z", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"0.5", "*", 
        RowBox[{
         RowBox[{"z", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"20", "*", 
        RowBox[{"z", "[", "t", "]"}]}], "-", 
       RowBox[{"0.3", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"0.5", "*", "t"}], "]"}]}]}], "\[Equal]", "0"}], " ", "&&", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0.25"}], " ", "&&", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "'"}], "[", "0", "]"}], " ", "\[Equal]", "0"}]}], ",", 
    RowBox[{"z", "[", "t", "]"}], ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8453675855143166`*^9, 3.8453676371200867`*^9}, {
  3.845367679569927*^9, 3.8453677095922985`*^9}, {3.845367750690213*^9, 
  3.845367762559767*^9}, {3.8453776346330476`*^9, 3.8453776757614527`*^9}, {
  3.8453782659059267`*^9, 3.8453783222157164`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"0af70405-5c47-4d6d-a829-17fc1ac4a6d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"z", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"0.008438671492022452`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.25`"}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"27.825773322125393`", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.25`", " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3.9651427748729375`", " ", "t"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"0.7997429971600515`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.25`", " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4.9651427748729375`", " ", "t"}], "]"}]}], "-", 
       RowBox[{"0.06304943206187857`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.25`", " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3.9651427748729375`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"1.5553931648391561`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"0.06304943206187857`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.25`", " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3.9651427748729375`", " ", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"0.04026787513580198`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.25`", " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4.9651427748729375`", " ", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"0.9999999999999998`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.25`", " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3.9651427748729375`", " ", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}]}], "-", 
       RowBox[{"0.04026787513580199`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.25`", " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4.9651427748729375`", " ", "t"}], "]"}]}], "+", 
       RowBox[{"0.7997429971600514`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.25`", " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4.4651427748729375`", " ", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4.9651427748729375`", " ", "t"}], "]"}]}]}], ")"}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8453773234267178`*^9, {3.845377659665716*^9, 3.8453776769448557`*^9}, 
   3.8453783235348425`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"534ece01-8410-445e-a45e-a6b684385c99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ForcedDamped", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.845367912444379*^9, 3.845367948840339*^9}, {
  3.8453776820772753`*^9, 3.845377682442524*^9}, {3.8453783276506233`*^9, 
  3.845378338831403*^9}, {3.84537845454581*^9, 3.845378533012909*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"e04b1db3-f654-4330-9a31-3469c2a257a2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$36663#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.1826139142638577, 0.24999999999989572`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.84537732680943*^9, {3.845377667031124*^9, 3.845377683944127*^9}, {
   3.845378469276456*^9, 3.845378534212096*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"794b56e9-ecf9-4d1c-8e43-005c3da12ed4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Phase", " ", "Potrait", " ", "for", " ", "the", " ", "numerical", " ", 
    "solution", " ", "for", " ", "the", " ", "underdamped", " ", "force", " ",
     "Oscillator"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ForcedDamped", "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"ForcedDamped", "'"}], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "1.5"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845377405425189*^9, 3.845377405725275*^9}, {
  3.845377708050869*^9, 3.845377717430725*^9}, {3.8453777793938537`*^9, 
  3.8453778936960287`*^9}, {3.845378551570774*^9, 3.8453785752773275`*^9}, {
  3.8453786203991175`*^9, 3.845378622237381*^9}, {3.8453788166249504`*^9, 
  3.845378825328509*^9}, {3.845378855593539*^9, 3.845378857082877*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"3605eb6d-3c63-4f4e-8a31-66027b664244"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
5Sk4bE1FQjpiH5vWYA3KNvJNbbCTcNfaXXJCWhXeCx3WWBYloWGz5Jk3AZV4
K/C1z255Eq600C5V2FSgGsdava8WCe38ftOfv0nCWN15EdrXJBSVGHFJ0CQi
++0ynlgrEq756UVbcZXi7ywPh8cfSDht//PW6GoRvhq1oRH1IiHXiKvGT1IB
Eg1LU/iCSXiEKj+p3SMPywudVG9GklC7Ko4q6GEOBubuo3VOIGHMqwMSj5mz
8ZahT91QGgmTAx0lHfrSUcP5UdxDAgn9qc6PFb9ORl+m8KLv+ST8dXq/V+Se
eKSrduZLLSZhPsX2Q73wKFSrYLz8sWzHX2bRw49GX3D5tswhJySh7d9KDZTy
xso7ddsRJBJy85L2HtKywamDV9SGd/ChS1y2G82asGfXD6trO1j21u/z1x67
AL0nfQMSScjOHqNI99IfCkj6pbqlJPRaLEoRZw2Dk6xuLdxFJLzHIzzN/DIG
2iHZ7b88EtKwFR8fLE+A80mBdpxZJMw6uD4TcCwVUmpjbz1JIaHi1wI8oZ8J
FMIVwQWxJAykEpAL6c8G3983GS+H7ayX+7b3o60cUNn9w2XUn4SqYGPKw5wP
OqmNKRnuO/EpPaXYliqEdQYe1QQHEnLy8zzIeVYMuyhy9WvfkTDj35IRv10p
nKS5ikdekPDDX4W8x8FEKOfKu/3pCQkrHXLveauSgOpQ7qF/UiSUzDcWt39Z
AVYswnc2BElI+2/59Ls3lWB3y3WZg5WEfz+8zNq90/c8HfzeeoyShBKEhfwi
pxqQ/0GezRpG9C4vrq37UAu/LcaMIgoQuXoS6sGlDlIDKqxK9REjY6kXRBwb
4NhiuMaKGOJlMSPjcNtGKBU/yhV6ELEq8GD2NfMmaJClpb1DIKLH9VNqGzot
cHrFba+uIxG9fv76u63aCr/UJetXlYmo2MP9kuZ8G6RtnBCJmSpDnW3ln0cZ
2mFWK+tRZUYZptKHMdG5t8NL7v1CJuZluH7u0IFfW+1QcbCg2JqyDMVM763b
TXWAGKWjdT51KVZSHJSai+sCZoKe12x1CV7aCMhIO9gNDm/sUtucS7DyKK2+
jFU3PDZqrGr/W7xz+0mc7LvRA9xFap2Uw0XYMD5zmbO/Fz7ozHAp+xVhZYLb
Fu3VPtil8PCNsXwR2v4pzon42gdOayNSUqmF+P2he2nd/X54S6wxCH5egEwR
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
       "]]},
     Annotation[#, "Charting`Private`Tag$40566#1"]& ]}, {}},
  AspectRatio->0.6666666666666666,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.18261391504580088`, 0.25}, {-0.9659065942552174, 
   0.8054087325826663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8453778793517437`*^9, 3.8453778948033266`*^9}, {
   3.845378569743004*^9, 3.8453785763266344`*^9}, {3.8453786227969084`*^9, 
   3.8453786373450284`*^9}, {3.8453788176842403`*^9, 3.8453788264278297`*^9}, 
   3.845378857962274*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"91018dc1-937e-4b39-9ad9-10f237032bbf"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{576., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d54b3305-e9b0-4421-b6db-8f61d3b84bb3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 296, 8, 135, "Subsection",ExpressionUUID->"917faf4e-5985-4297-b1d0-134298941bb3"],
Cell[879, 32, 1059, 34, 49, "Input",ExpressionUUID->"3c837780-bde0-48c1-a470-bc577a87694f"],
Cell[CellGroupData[{
Cell[1963, 70, 1185, 31, 107, "Input",ExpressionUUID->"f3d73c86-8e38-416b-914d-1693637cc226"],
Cell[3151, 103, 21879, 410, 65, "Output",ExpressionUUID->"d9fd5f31-4a1a-4516-8241-bef49a99c80d"]
}, Open  ]],
Cell[25045, 516, 217, 5, 28, "Input",ExpressionUUID->"d502d46c-e4eb-4d3c-82ee-db277e19f9a1"],
Cell[CellGroupData[{
Cell[25287, 525, 1898, 49, 146, "Input",ExpressionUUID->"90fb082b-3791-4d52-97bb-65185ed7ac48"],
Cell[27188, 576, 537, 11, 32, "Output",ExpressionUUID->"3ef933df-3d43-40ca-9c22-071f3c679f98"]
}, Open  ]],
Cell[27740, 590, 1415, 35, 107, "Input",ExpressionUUID->"168d4b6f-449a-4f75-bffb-f34b17e2e655"],
Cell[CellGroupData[{
Cell[29180, 629, 1332, 36, 107, "Input",ExpressionUUID->"c5c08bec-8eea-4d3c-b9a7-0618f7f36f50"],
Cell[30515, 667, 530, 12, 32, "Output",ExpressionUUID->"1d01104c-5c26-4196-b60d-ff545307c91c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31082, 684, 2369, 53, 244, "Input",ExpressionUUID->"eb733643-a8fd-40b9-a1f7-6ab00aea07ad"],
Cell[33454, 739, 55539, 1030, 248, "Output",ExpressionUUID->"f654a6c0-a66f-45be-afc3-f9417baf1f59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89030, 1774, 1182, 27, 88, "Input",ExpressionUUID->"fb66360c-d7f9-438a-8dec-a716c09723cd"],
Cell[90215, 1803, 36449, 614, 272, "Output",ExpressionUUID->"c8a2b172-f565-4ebb-9ad7-abf450ac7302"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126701, 2422, 1956, 46, 127, "Input",ExpressionUUID->"6034ccbe-e24a-4dc4-833b-b29d1f92c636"],
Cell[128660, 2470, 30105, 549, 65, "Output",ExpressionUUID->"254529d2-7336-4806-9c79-73481097997d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158802, 3024, 1156, 29, 68, "Input",ExpressionUUID->"0af70405-5c47-4d6d-a829-17fc1ac4a6d4"],
Cell[159961, 3055, 3370, 78, 195, "Output",ExpressionUUID->"534ece01-8410-445e-a45e-a6b684385c99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163368, 3138, 476, 10, 28, "Input",ExpressionUUID->"e04b1db3-f654-4330-9a31-3469c2a257a2"],
Cell[163847, 3150, 32358, 550, 232, "Output",ExpressionUUID->"794b56e9-ecf9-4d1c-8e43-005c3da12ed4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196242, 3705, 1089, 24, 88, "Input",ExpressionUUID->"3605eb6d-3c63-4f4e-8a31-66027b664244"],
Cell[197334, 3731, 49432, 825, 254, "Output",ExpressionUUID->"91018dc1-937e-4b39-9ad9-10f237032bbf"]
}, Open  ]]
}, Open  ]]
}
]
*)

